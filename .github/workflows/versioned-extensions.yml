name: Build and Release Versioned Browser Extension

on:
  push:
    branches:
      - main
    paths:
      - 'path/to/manifest.json'  # Replace with the actual path to your manifest file

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.RELEASE_PAT }}

    - name: Check if version has changed
      id: version_check
      run: |
        VERSION=$(jq -r '.version' path/to/manifest.json)  # Extract version from manifest
        echo "Version in manifest: $VERSION"
        echo "::set-output name=version::$VERSION"
      shell: bash

    - name: Get the latest tag version
      id: latest_tag
      run: |
        LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "Latest tag: $LATEST_TAG"
        echo "::set-output name=latest_tag::$LATEST_TAG"
      shell: bash

    - name: Compare versions
      id: compare_versions
      run: |
        if [ "${{ steps.version_check.outputs.version }}" != "${{ steps.latest_tag.outputs.latest_tag }}" ]; then
          echo "::set-output name=version_changed::true"
        else
          echo "::set-output name=version_changed::false"
        fi
      shell: bash

    - name: Build Chrome Extension
      if: steps.compare_versions.outputs.version_changed == 'true'
      run: |
        zip -r chrome-extension-${{ steps.version_check.outputs.version }}.zip . -x "*.git*" "docs*"

    - name: Generate and Push Tag
      if: steps.compare_versions.outputs.version_changed == 'true'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -fa ${{ steps.version_check.outputs.version }} -m "Release ${{ steps.version_check.outputs.version }}"
        git push https://${{ secrets.RELEASE_PAT }}@github.com/${{ github.repository }}.git --tags --force
      shell: bash

    - name: Create and Upload Release
      if: steps.compare_versions.outputs.version_changed == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version_check.outputs.version }}
        token: ${{ secrets.RELEASE_PAT }}
        draft: false
        files: |
          ./chrome-extension-${{ steps.version_check.outputs.version }}.zip

